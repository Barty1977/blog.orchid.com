{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["Index","data","location","pageContext","posts","allGhostPost","edges","currentPost","isHome","className","css","map","node","number","key","id","post","pageQuery"],"mappings":"wQAqDeA,UArCD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACvBC,EAAQH,EAAKI,aAAaC,MAE5BC,EAAc,EAElB,OACI,8BACI,YAAC,IAAD,CAAUL,SAAUA,IACpB,YAAC,IAAD,CAAQM,QAAQ,GACZ,mBAAKC,UAAU,aACX,uBAASC,IAAG,GAKPN,EAAMO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,WADA,CACC,IAAD,CAAUC,OAAQN,IAAeO,IAAKF,EAAKG,GAAIC,KAAMJ,QAG7D,YAAC,IAAD,CAAYT,YAAaA,QAqBtC,IAAMc,EAAS","file":"component---src-templates-index-js-4dc266031b4f678f6e77.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport { css } from '@emotion/core'\n\nimport { Layout, PostCard, Pagination } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n* Main index page (home page)\n*\n* Loads all posts from Ghost and uses pagination to navigate through them.\n* The number of posts that should appear per page can be setup\n* in /utils/siteConfig.js under `postsPerPage`.\n*\n*/\nconst Index = ({ data, location, pageContext }) => {\n    const posts = data.allGhostPost.edges\n\n    let currentPost = 0;\n\n    return (\n        <>\n            <MetaData location={location} />\n            <Layout isHome={true}>\n                <div className=\"container\">\n                    <section css={css`\n                        max-width: 600px;\n                        margin-left: auto;\n                        margin-right: auto;\n                    `}>\n                        {posts.map(({ node }) => (\n                            // The tag below includes the markup for each post - components/common/PostCard.js\n                            <PostCard number={currentPost++} key={node.id} post={node} />\n                        ))}\n                    </section>\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nIndex.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n}\n\nexport default Index\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n    query GhostPostQuery($limit: Int!, $skip: Int!) {\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] },\n            limit: $limit,\n            skip: $skip,\n        ) {\n            edges {\n                node {\n                    ...GhostPostFields\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}